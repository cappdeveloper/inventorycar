@model ChallengerApp.Models.UserProfileViewModel

@{
    ViewBag.Title = "Create::Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var roles = (SelectList)ViewBag.SelectRole;
}

<div  class="row">
    <div class="col-md-8">

        @using (Html.BeginForm("CreateEdit", "UserAccounts", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.HiddenFor(model => model.UserId)
            <div class="panel panel-default">
                <div class="panel-heading">

                    <h4 class="panel-title">@ViewBag.Action User</h4>
                    <p>
                        @Html.Partial("_InlineAlerts")
                        @Html.ValidationSummary(true)
                    </p>
                </div>
                <div class="panel-body">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-9">
                            @if (Model.UserId > 0)
                            {
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-9">
                            @if (Model.UserId > 0 && Model.Name.Equals("Super Administrator"))
                            {
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.RoleId, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-9">
                            @if (ViewBag.Action == "Create")
                            {
                                @Html.DropDownListFor(model => model.Roles, ViewBag.SelectRole as SelectList, new { @class = "form-control chosen-select", @multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.Roles)
                            }
                            else
                            {
                                <select multiple="multiple" class="form-control chosen-select" id="Roles" name="Roles">
                                    @if (roles.Any())
                                    {
                                        foreach (var role in roles)
                                        {
                                            if (Helpers.IsItemExistList(Model.Roles,role.Text))
                                            {
                                                <option selected="selected" value="@role.Text" >@role.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@role.Text" >@role.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            }
                        </div>
                    </div>*@
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Roles</label>
                        <div class="col-sm-9">
                            @foreach (var item in Model.SystemRoles)
                            {
                                if (Model.Roles.Any() && Model.Roles.Contains(item))
                                {
                                <div class="ckbox ckbox-primary">
                                    <input type="checkbox" id="@item" value="@item" name="SystemRoles" checked="checked">
                                    <label for="@item">@item</label>
                                </div>
                                }
                                else
                                {
                                <div class="ckbox ckbox-primary">
                                    <input type="checkbox" id="@item" value="@item" name="SystemRoles">
                                    <label for="@item">@item</label>
                                </div>
                                }

                            }
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-9">
                            <div class="ckbox-primary">
                                @Html.CheckBoxFor(model => model.IsActive)
                            </div>
                            <!-- rdio -->

                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <div class="row">
                        <div class="col-sm-9 col-sm-offset-3">
                            <button class="btn btn-primary">Submit</button>
                            <a id="cancel-button" href="@Url.Action("Index", "UserAccounts")" class="btn btn-default">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
            
        }
    </div>
</div>

@section styles{
}

@section breadcrumbs{
    <li><a href="/UserAccounts">User Accounts</a></li>
    <li class="active"><span>@ViewBag.Action</span></li>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            // Chosen Select
            jQuery(".chosen-select").chosen({ 'width': '100%', 'white-space': 'nowrap' });
        })

    </script>
}
